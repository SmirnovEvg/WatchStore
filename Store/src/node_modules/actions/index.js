import {
    FETCH_WATCHES_START,
    FETCH_WATCHES_SUCCESS,
    FETCH_WATCHES_ERROR,
    FETCH_WATCH_BY_ID_START,
    FETCH_WATCH_BY_ID_SUCCESS,
    FETCH_WATCH_BY_ID_ERRORS,
    ADD_WATCH_TO_BASKET,
    SEARCH_WATCH,
    FETCH_CATEGORIES_START,
    FETCH_CATEGORIES_SUCCESS,
    FETCH_CATEGORIES_ERROR,
    REMOVE_WATCH_FROM_BASKET,
    CLEAN_BASKET
} from 'actionTypes'
import {
    fetchWatches as fetchWatchesApi,
    fetchWatchById as fetchWatchByIdApi,
    fetchCategories as fetchCategoriesApi
} from 'api'

export const fetchWatches = () => async dispatch => {
    dispatch({
        type: FETCH_WATCHES_START
    })

    try {
        const watches = await fetchWatchesApi()
        dispatch({
            type: FETCH_WATCHES_SUCCESS,
            payload: watches
        })
    } catch (e) {
        dispatch({
            type: FETCH_WATCHES_ERROR,
            payload: e,
            error: true
        })
    }
}

export const fetchWatchById = id => async dispatch => {
    dispatch({ type: FETCH_WATCH_BY_ID_START })
    try {
        const watch = await fetchWatchByIdApi(id)
        dispatch({
            type: FETCH_WATCH_BY_ID_SUCCESS,
            payload: watch
        })
    } catch (e) {
        dispatch({
            type: FETCH_WATCH_BY_ID_ERRORS,
            payload: e,
            error: true
        })
    }
}

export const addWatchToBasket = id => dispatch => {
    dispatch({
        type: ADD_WATCH_TO_BASKET,
        payload: id
    })
}

export const searchWatch = text => dispatch => {
    dispatch({
        type: SEARCH_WATCH,
        payload: text
    })
}

export const fetchCategories = () => async dispatch => {
    dispatch({
        type: FETCH_CATEGORIES_START
    })

    try {
        const categories = await fetchCategoriesApi()
        dispatch({
            type: FETCH_CATEGORIES_SUCCESS,
            payload: categories
        })
    } catch (e) {
        dispatch({
            type: FETCH_CATEGORIES_ERROR,
            payload: e,
            error: true
        })
    }
}

export const removeWatchFromBasket = id => dispatch => {
    dispatch({
        type: REMOVE_WATCH_FROM_BASKET,
        payload: id
    })
}

export const cleanBasket = () => dispatch => {
    dispatch({
        type: CLEAN_BASKET
    })
}

export const basketCheckout = watches => () => {
    alert(JSON.stringify(watches))
}